apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nominatim.fullname" . }}
  labels:
    {{- include "nominatim.labels" . | nindent 4 }}
spec:
  {{- if .Values.initNominatim }}
  replicas: 1
  {{- else }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nominatim.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nominatim.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nominatim.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if .Values.initNominatim }}
            - /bin/bash
            - -c
          args: 
            - apt-get update && 
              apt-get -y install wget && 
              cd /data && 
              wget http://download.geofabrik.de/europe/romania-latest.osm.pbf &&
              cd $OLDPWD &&
              /bin/bash /app/init.sh /data/romania-latest.osm.pbf postgresdata 3 &&
              mv /data/postgresdata/* /data/ &&
              rm -rf /data/romania-latest.osm.pbf
          {{- else }}
            - /bin/bash
            - /app/start.sh
          {{- end }}           
          {{- if .Values.env }}
          env:
            {{ range $k, $v := .Values.env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- if not .Values.initNominatim }}
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgresql
              {{- if .Values.initNominatim }}
              mountPath: /data
              {{- else }}
              mountPath: /var/lib/postgresql/12/main
              {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: postgresql
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "nominatim.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
